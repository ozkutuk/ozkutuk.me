// Copyright 2018-2024 the Deno authors. All rights reserved. MIT license.
// This module is browser compatible.

import type { Writer, WriterSync } from "./types.ts";

const decoder = new TextDecoder();

/**
 * Writer utility for buffering string chunks.
 *
 * @example
 * ```ts
 * import {
 *   copyN,
 *   StringReader,
 *   StringWriter,
 * } from "https://deno.land/std@$STD_VERSION/io/mod.ts";
 * import { copy } from "https://deno.land/std@$STD_VERSION/io/copy.ts";
 *
 * const w = new StringWriter("base");
 * const r = new StringReader("0123456789");
 * await copyN(r, w, 4); // copy 4 bytes
 *
 * // Number of bytes read
 * console.log(w.toString()); //base0123
 *
 * await copy(r, w); // copy all
 * console.log(w.toString()); // base0123456789
 * ```
 *
 * **Output:**
 *
 * ```text
 * base0123
 * base0123456789
 * ```
 *
 * @deprecated This will be removed in 1.0.0. Use the {@link https://developer.mozilla.org/en-US/docs/Web/API/Streams_API | Web Streams API} instead.
 */
export class StringWriter implements Writer, WriterSync {
  #chunks: Uint8Array[] = [];
  #byteLength = 0;
  #cache: string | undefined;

  constructor(private base: string = "") {
    const c = new TextEncoder().encode(base);
    this.#chunks.push(c);
    this.#byteLength += c.byteLength;
  }

  write(p: Uint8Array): Promise<number> {
    return Promise.resolve(this.writeSync(p));
  }

  writeSync(p: Uint8Array): number {
    this.#chunks.push(new Uint8Array(p));
    this.#byteLength += p.byteLength;
    this.#cache = undefined;
    return p.byteLength;
  }

  toString(): string {
    if (this.#cache) {
      return this.#cache;
    }
    const buf = new Uint8Array(this.#byteLength);
    let offs = 0;
    for (const chunk of this.#chunks) {
      buf.set(chunk, offs);
      offs += chunk.byteLength;
    }
    this.#cache = decoder.decode(buf);
    return this.#cache;
  }
}

// denoCacheMetadata={"headers":{"x-amz-cf-pop":"FRA56-P5","date":"Tue, 11 Feb 2025 01:58:44 GMT","cache-control":"public, max-age=31536000, immutable","x-amz-server-side-encryption":"AES256","content-type":"application/typescript; charset=utf-8","strict-transport-security":"max-age=63072000; includeSubDomains; preload","access-control-allow-origin":"*","cross-origin-resource-policy":"same-origin","x-amz-cf-id":"LOUBDg48TAtOKv85HPaJDgGhuXSQmC8Qmxgj8xFxjRTaJMs8DnEk2w==","age":"3231440","content-security-policy":"default-src 'none'; style-src 'unsafe-inline'; sandbox","cross-origin-embedder-policy":"same-origin","x-cache":"Hit from cloudfront","referrer-policy":"strict-origin-when-cross-origin","x-amz-version-id":"ZvUK45oNVJWkcUHPuZr28cpJm_qnTRWH","content-length":"1876","cross-origin-opener-policy":"same-origin","etag":"\"e1ed01835e920581ff8b8b412c0068c8\"","x-content-type-options":"nosniff","x-amz-replication-status":"COMPLETED","accept-ranges":"bytes","server-timing":"fetchSource;dur=22","x-frame-options":"DENY","server":"deno/gcp-europe-west3","via":"http/2 edgeproxy-h","last-modified":"Thu, 25 Apr 2024 03:01:09 GMT","vary":"Accept-Encoding, Origin"},"url":"https://deno.land/std@0.224.0/io/string_writer.ts","time":1742470563}